<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////w==
</value>
  </data>
</root>